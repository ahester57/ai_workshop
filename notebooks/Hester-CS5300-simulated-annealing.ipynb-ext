{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "38e8db13-6bef-40ee-875a-cac68b1783f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ahest\\AppData\\Local\\Temp\\ipykernel_16760\\3439594447.py:310: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead\n",
      "  logger.warn(cycerr)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "ProblemGraph: {(0, 0, 0), err=2.000: [(3, -1, -2), err=1.398], (3, -1, -2), err=1.398: [(5, -1, -2), err=1.238], (5, -1, -2), err=1.238: [(3, 0, -2), err=1.238], (3, 0, -2), err=1.238: [(5, 2, -4), err=0.916], (5, 2, -4), err=0.916: [(4, 2, -5), err=0.592], (4, 2, -5), err=0.592: [(3, 3, -6), err=0.597], (3, 3, -6), err=0.597: [(4, 4, -7), err=0.365], (4, 4, -7), err=0.365: [(4, 5, -7), err=0.287], (4, 5, -7), err=0.287: [(5, 6, -9), err=0.185], (5, 6, -9), err=0.185: [(5, 7, -9), err=0.185], (5, 7, -9), err=0.185: [(6, 7, -11), err=0.144], (6, 7, -11), err=0.144: [(7, 7, -11), err=0.083], (7, 7, -11), err=0.083: [(8, 7, -12), err=0.072], (8, 7, -12), err=0.072: [(9, 7, -13), err=0.068], (9, 7, -13), err=0.068: [(9, 7, -13), err=0.068, (8, 8, -12), err=0.054], (8, 8, -12), err=0.054: [(9, 9, -14), err=0.031], (9, 9, -14), err=0.031: [(9, 10, -15), err=0.027], (9, 10, -15), err=0.027: [(10, 11, -17), err=0.021], (10, 11, -17), err=0.021: [(11, 11, -17), err=0.012], (11, 11, -17), err=0.012: [(12, 11, -18), err=0.010], (12, 11, -18), err=0.010: [(13, 11, -18), err=0.010], (13, 11, -18), err=0.010: [(12, 12, -19), err=0.009], (12, 12, -19), err=0.009: [(13, 13, -21), err=0.007], (13, 13, -21), err=0.007: [(14, 13, -21), err=0.004], (14, 13, -21), err=0.004: [(15, 14, -23), err=0.003], (15, 14, -23), err=0.003: []}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\" Implement the anneal command.\n",
    "\n",
    "```\n",
    "function SIMULATED-ANNEALING(problem, schedule) returns a solution State\n",
    "  current <- problem.INITIAL\n",
    "  for t = 1 to inf do\n",
    "      T <- schedule(t)\n",
    "      if T = 0 then return current\n",
    "      next <- a randomly selected successor of current\n",
    "      delta_E <- VALUE(current) - VALUE(next)\n",
    "      if delta_E > 0 then current <- next\n",
    "      else current <- next only with probability e^(-delta_E/T)\n",
    "```\n",
    "\n",
    "Stuart Russel, Peter Norvig. \"Artificial Intelligence: A Modern Approach, 4th Edition\" (2021)\n",
    "\"\"\"\n",
    "import numpy as np\n",
    "\n",
    "from collections.abc import Iterable\n",
    "from graphlib import CycleError, TopologicalSorter\n",
    "from logging import getLogger, getLoggerClass, setLoggerClass\n",
    "from logging import Formatter, NullHandler, StreamHandler\n",
    "from typing import Callable, override, TextIO\n",
    "\n",
    "try:\n",
    "    # for visual mode. `pip install -e .[visual]\n",
    "    import matplotlib.pyplot as plt\n",
    "    import networkx as nx\n",
    "    DiGraph = nx.DiGraph\n",
    "except ModuleNotFoundError:\n",
    "    plt = None\n",
    "    nx = None\n",
    "    class DiGraph: pass\n",
    "\n",
    "from logging import getLogger, getLoggerClass, setLoggerClass\n",
    "from logging import Formatter, NullHandler, StreamHandler\n",
    "from typing import TextIO\n",
    "\n",
    "\n",
    "# Graphing Flags\n",
    "TEMP_OVER_TIME = False\n",
    "\n",
    "\n",
    "class _Logger(getLoggerClass()):\n",
    "    \"\"\" Message logger.\n",
    "\n",
    "    \"\"\"\n",
    "    LOGFMT = \"%(asctime)s;%(levelname)s;%(name)s;%(message)s\"\n",
    "    DFLTLEVEL = \"INFO\"\n",
    "\n",
    "    def __init__(self, name:str|None=None) -> None:\n",
    "        \"\"\" Initialize this logger.\n",
    "\n",
    "        Loggers with the same name refer to the same underlying object. \n",
    "        Names are hierarchical, e.g. 'parent.child' defines a logger that is a \n",
    "        descendant of 'parent'.\n",
    "\n",
    "        :param name: logger name (application name by default)\n",
    "        :type name: str|None\n",
    "        \"\"\"\n",
    "        # With a NullHandler, client code may make logging calls without regard\n",
    "        # to whether the logger has been started yet. The standard Logger API\n",
    "        # may be used to add and remove additional handlers, but the\n",
    "        # NullHandler should always be left in place.\n",
    "        super().__init__(name or __name__.split('.', maxsplit=1)[0])\n",
    "        self.addHandler(NullHandler())  # default to no output\n",
    "\n",
    "    def start(self, level:str|None=DFLTLEVEL, stream:TextIO|None=None) -> None:\n",
    "        \"\"\" Start logging to a stream.\n",
    "\n",
    "        Until the logger is started, no messages will be emitted. This applies\n",
    "        to all loggers with the same name and any child loggers. \n",
    "\n",
    "        Multiple streams can be logged to by calling start() for each one.\n",
    "        Calling start() more than once for the same stream will result in\n",
    "        duplicate records to that stream.\n",
    "\n",
    "        Messages less than the given priority level will be ignored. The\n",
    "        default level conforms to the *nix convention that a successful run \n",
    "        should produce no diagnostic output. Call setLevel() to change the \n",
    "        logger's priority level after it has been stared. Available levels and \n",
    "        their suggested meanings:\n",
    "\n",
    "            DEBUG - output useful for developers\n",
    "            INFO - trace normal program flow, especially external interactions\n",
    "            WARN - an abnormal condition was detected that might need attention\n",
    "            ERROR - an error was detected but execution continued\n",
    "            CRITICAL - an error was detected and execution was halted\n",
    "\n",
    "        :param level: logger priority level\n",
    "        :type level: str\n",
    "        :param stream: output stream (stderr by default)\n",
    "        :type stream: TextIO|None\n",
    "        \"\"\"\n",
    "        self.setLevel(level.upper() if level is not None else self.DFLTLEVEL)\n",
    "        handler = StreamHandler(stream)\n",
    "        handler.setFormatter(Formatter(self.LOGFMT))\n",
    "        handler.setLevel(self.level)\n",
    "        self.addHandler(handler)\n",
    "\n",
    "    def stop(self) -> None:\n",
    "        \"\"\" Stop logging with this logger.\n",
    "\n",
    "        \"\"\"\n",
    "        for handler in self.handlers[1:]:\n",
    "            # Remove everything but the NullHandler.\n",
    "            self.removeHandler(handler)\n",
    "\n",
    "\n",
    "# Never instantiate a Logger object directly, always use getLogger().\n",
    "setLoggerClass(_Logger)  # applies to all subsequent getLogger() calls\n",
    "logger : _Logger = getLogger(__name__.split(\".\", maxsplit=1)[0])  # use application name\n",
    "\n",
    "\n",
    "class Neuron(object):\n",
    "    DIM_W = 3\n",
    "\n",
    "    def __init__(self, *weights:tuple[int]) -> None:\n",
    "        \"\"\"Initialize an instance of Neuron.\n",
    "\n",
    "        :param weights: Tuple of weight values.\n",
    "        :type weights: tuple[int]\n",
    "        :raises TypeError: If weights is not of length .node.Neuron.DIM_W.\n",
    "        \"\"\"\n",
    "        logger.debug(\"initializing %s\", self.__class__.__name__)\n",
    "        if weights is None:\n",
    "            raise TypeError(f'weights : tuple[int] : Must exist.')\n",
    "        if not isinstance(weights, Iterable) and len(weights) != self.DIM_W:\n",
    "            raise TypeError(f'weights : tuple[int] : Must be of length {self.DIM_W}.')\n",
    "        self.weights = weights\n",
    "        self.error = 2.\n",
    "\n",
    "    def score(self, x, y) -> float:\n",
    "        return 1 / (1 + np.exp(self.weights[0] * x + self.weights[1] * y + self.weights[2]))\n",
    "\n",
    "    @override\n",
    "    def __repr__(self) -> str:\n",
    "        return f'{self.weights}, err={self.error:.3f}'\n",
    " \n",
    "    @override\n",
    "    def __hash__(self) -> int:\n",
    "        return hash(self.weights)\n",
    "\n",
    "    @override\n",
    "    def __eq__(self, other) -> bool:\n",
    "        return self.weights == other.weights\n",
    "\n",
    "\n",
    "class ProblemGraph(TopologicalSorter):\n",
    "\n",
    "    def __init__(self, initial:Neuron) -> None:\n",
    "        \"\"\"Initialize an instance of ProblemGraph.\n",
    "\n",
    "        :param initial: Neuron\n",
    "        :type initial: Neuron\n",
    "        :param evaluate: The evaluation function\n",
    "        :type evaluate: Callable\n",
    "        :raises TypeError: If initial is None\n",
    "        \"\"\"\n",
    "        logger.debug(\"initializing %s\", self.__class__.__name__)\n",
    "        if initial is None:\n",
    "            raise TypeError(\"initial : Neuron - Cannot be None\")\n",
    "        super().__init__({initial: {}})\n",
    "        self.initial : Neuron = self._node2info[initial].node\n",
    "        self.finished_graph = None\n",
    "\n",
    "    def evaluate_node(self, node:Neuron) -> float:\n",
    "        \"\"\"Initialize a Neuron as a potential NAND gate.\n",
    "\n",
    "        :param initial: Neuron\n",
    "        :type initial: Neuron\n",
    "        :return: Sum of errors for each combination\n",
    "        :rtype: float\n",
    "        \"\"\"\n",
    "        node.error = np.sum([\n",
    "            np.abs(1 - node.score(0, 0)),\n",
    "            np.abs(1 - node.score(0, 1)),\n",
    "            np.abs(1 - node.score(1, 0)),\n",
    "            np.abs(0 - node.score(1, 1))\n",
    "        ])\n",
    "        return node.error\n",
    "\n",
    "    @property\n",
    "    def graph(self) -> dict[Neuron, list[Neuron]]:\n",
    "        if self.finished_graph is None:\n",
    "            self.finished_graph = dict([(self._node2info[n].node, self._node2info[n].successors) for n in self._node2info])\n",
    "        return self.finished_graph\n",
    "\n",
    "    def __repr__(self) -> str:\n",
    "        return f'ProblemGraph: {self.graph}'\n",
    "\n",
    "\n",
    "def _anneal_step(\n",
    "        problem:ProblemGraph,\n",
    "        T:float,\n",
    "        current:Neuron,\n",
    "        successor:Neuron,\n",
    "        G:DiGraph|None=None\n",
    "    ) -> Neuron:\n",
    "    \"\"\" Execute one step of the simulated annealing function.\n",
    "    \n",
    "    :param problem: The problem definition.\n",
    "    :type problem: ProblemGraph\n",
    "    :param T: Current temperature.\n",
    "    :type T: float\n",
    "    :param current: The current node, searching for a greener pasture.\n",
    "    :type current: Neuron\n",
    "    :param successor: One of the neighboring nodes, enticing.\n",
    "    :type successor: Neuron\n",
    "    :param G: The network graph, if visual mode enabled.\n",
    "    :type G: networkx.DiGraph|None\n",
    "    :return: Either the current or successor node\n",
    "    :rtype: Neuron\n",
    "    \"\"\"\n",
    "    delta_E = problem.evaluate_node(current) - problem.evaluate_node(successor)\n",
    "    logger.debug(delta_E)\n",
    "    if delta_E > 0:\n",
    "        logger.debug(\"Taking successor as better option (exploitation)\")\n",
    "        problem.add(successor, current) # Trace the path\n",
    "        if G is not None:\n",
    "            G.add_edge(current, successor)\n",
    "        return successor\n",
    "    else:\n",
    "        logger.debug(T)\n",
    "        probability = np.exp(delta_E / T)\n",
    "        if np.random.default_rng().uniform() < probability:\n",
    "            logger.debug(\"Taking successor with probability %d%s (exploration)\", probability*100, '%')\n",
    "            problem.add(successor, current) # Trace the path\n",
    "            if G is not None:\n",
    "                G.add_edge(current, successor)\n",
    "            return successor\n",
    "    return current\n",
    "\n",
    "\n",
    "def _anneal_loop(\n",
    "        problem:ProblemGraph|None=None,\n",
    "        schedule:Callable=lambda x : x / 1.2,\n",
    "        G:DiGraph|None=None\n",
    "    ) -> Neuron:\n",
    "    \"\"\" Execute the simulated annealing algorithm.\n",
    "    \n",
    "    :param problem: The problem definition.\n",
    "    :type problem: ProblemGraph\n",
    "    :param schedule: Temperature function\n",
    "    :type schedule: Callable\n",
    "    :param G: The network graph, if visual mode enabled.\n",
    "    :type G: networkx.DiGraph|None\n",
    "    :return: The winner\n",
    "    :rtype: Neuron\n",
    "    \"\"\"\n",
    "    logger.debug(\"executing anneal command\")\n",
    "    assert isinstance(problem, ProblemGraph)\n",
    "    assert isinstance(schedule, Callable)\n",
    "    current = problem.initial\n",
    "    logger.debug(\"Initial: %s\", current)\n",
    "    T_history = []\n",
    "    T = 1\n",
    "    for t in range(10000000):\n",
    "        T_history.append(T)\n",
    "        T = schedule(T)\n",
    "        if T < 0.000000001: break\n",
    "        successor = Neuron(\n",
    "            *current.weights\n",
    "           + np.random.default_rng()\n",
    "                .integers(\n",
    "                    low=-2.-current.error,\n",
    "                   # widen step size as error increases\n",
    "                    high=2.+current.error,\n",
    "                    size=Neuron.DIM_W)\n",
    "        )\n",
    "        current = _anneal_step(problem, T, current, successor, G)\n",
    "    if G is not None and TEMP_OVER_TIME:\n",
    "        steps = np.arange(1, len(T_history)+1)\n",
    "        plt.plot(T_history, steps, marker='o')\n",
    "        plt.title(\"Temperative over Time\")\n",
    "        plt.xlabel(\"Step\")\n",
    "        plt.ylabel(\"Temperature\")\n",
    "        plt.show()\n",
    "    return current\n",
    "\n",
    "\n",
    "def main(problem:ProblemGraph|None=None, schedule:Callable=lambda x : x / 1.2) -> ProblemGraph:\n",
    "    \"\"\" Entrypoint to the simulated annealing algorithm.\n",
    "    \n",
    "    :param problem: The problem definition.\n",
    "    :type problem: ProblemGraph\n",
    "    :param schedule: Temperature function\n",
    "    :type schedule: Callable\n",
    "    :return: The problem with solution search graph.\n",
    "    :rtype: ProblemGraph\n",
    "    \"\"\"\n",
    "    logger.debug(\"executing anneal command\")\n",
    "    assert problem is None or isinstance(problem, ProblemGraph)\n",
    "    assert schedule is None or isinstance(schedule, Callable)\n",
    "    if problem is None:\n",
    "        problem = ProblemGraph(Neuron(0, 0, 0))\n",
    "    if schedule is None:\n",
    "        schedule = lambda x : x / 1.2\n",
    "    for attempt in range(1, 10):\n",
    "        # Random Restarts 10x or until err < 0.5\n",
    "        G = None\n",
    "        if plt is not None and nx is not None:\n",
    "            G = nx.DiGraph()\n",
    "        # Run simulated annealing\n",
    "        winner = _anneal_loop(problem, schedule, G)\n",
    "        try:\n",
    "            # Topological sort\n",
    "            static_order = tuple(problem.static_order())\n",
    "        except CycleError as cycerr:\n",
    "            logger.warn(cycerr)\n",
    "            static_order = 'cycle'\n",
    "        logger.debug(f\"Static Order: {static_order}\")\n",
    "        logger.info(\"Winner: %s\", winner)\n",
    "        logger.info(\"Path Length: %s\", len(problem.graph.keys()))\n",
    "        if winner.error < 0.5:\n",
    "            break\n",
    "        logger.warning(\"Winner not good enough, restarting with attempt #%d.\", attempt)\n",
    "        problem = ProblemGraph(Neuron(0, 0, 0))\n",
    "    if G is not None:\n",
    "        logger.info(\"Graph Length: %s\", len(G))\n",
    "        %matplotlib inline\n",
    "        pos = nx.kamada_kawai_layout(G, weight=None)\n",
    "        nx.draw(G, pos, with_labels=True, node_color='blue', edge_color='grey', node_size=20)\n",
    "        plt.show()\n",
    "    return problem\n",
    "\n",
    "main()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "861ad40f-2ac3-4ae5-9bfd-df7c718da783",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
